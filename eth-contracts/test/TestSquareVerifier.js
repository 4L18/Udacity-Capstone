// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var squareVerifier = artifacts.require('./verifier.sol');
// - use the contents from proof.json generated from zokrates steps
let correctProof = require('../../zokrates/code/square/proof.json');

contract('TestSquareVerifier', accounts => {

    const account0 = accounts[0];
    const a = correctProof.proof.a;
    const b = correctProof.proof.b;
    const c = correctProof.proof.c;
    
    describe('Test verification', function() {
        
        beforeEach(async function () { 
            this.contract = await squareVerifier.new({from: account0});
        })

        // Test verification with correct proof
        it('verification with correct proof', async function(){
            let rightInputs = correctProof.inputs;
            let verified = await this.contract.verifyTx.call(a, b, c, rightInputs, {from:account0});
            assert(verified, "Verification should be true");
        })

        // Test verification with incorrect proof
        it('verification with incorrect proof', async function(){
            let wrongInputs = [2,3];
            let verified = await this.contract.verifyTx.call(a, b, c, wrongInputs, {from:account0});
            assert(!verified, "Verification should be false");
        })
    })
})
